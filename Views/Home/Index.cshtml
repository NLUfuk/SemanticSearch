@model SemanticSearch.Models.SearchViewModel
@{
    ViewData["Title"] = "Semantik Arama";
}

<h1>Semantik Arama</h1>   @* (Bogus + ML.NET + Lucene *@

<form method="get" asp-controller="Home" asp-action="Index" class="mb-3">
    <div class="row g-2 align-items-center">
        <div class="col-md-6">
            <input type="text" name="q" value="@Model?.Query" class="form-control" placeholder="Ne aramak istersiniz?" />
        </div>
        <div class="col-md-2">
            <div class="input-group">
                <span class="input-group-text">Min Score</span>
                <input type="number" id="minScoreInput" name="minScore" step="0.01" min="0" max="1" value="@Model.MinScore.ToString("0.00")" class="form-control" />
            </div>
        </div>
        <div class="col-md-2">
            <div class="d-grid">
                <input type="hidden" id="typeInput" name="type" value="@(ViewBag.Type ?? "hybrid")" />
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-secondary @(ViewBag.Type=="hybrid"?"active":null)" onclick="setModeAndSubmit('hybrid', '0.10', this)">hybrid</button>
                    <button type="button" class="btn btn-outline-secondary @(ViewBag.Type=="lexical"?"active":null)" onclick="setModeAndSubmit('lexical', '0.10', this)">lexical</button>
                    <button type="button" class="btn btn-outline-secondary @(ViewBag.Type=="semantic"?"active":null)" onclick="setModeAndSubmit('semantic', '0.02', this)">semantic</button>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="input-group">
                <span class="input-group-text">α</span>
                <input type="number" name="alpha" step="0.05" min="0" max="1" value="@((ViewBag.Alpha??0.4f).ToString("0.00"))" class="form-control" />
            </div>
        </div>
        <div class="col-md-12 col-lg-2 mt-2 mt-lg-0">
            <button type="submit" class="btn btn-primary w-100">Ara</button>
        </div>
    </div>
</form>

<div class="mb-3">
    <div class="d-flex align-items-center gap-2">
        <button class="btn btn-sm btn-outline-secondary" type="button" onclick="openSynEditor()">Synonyms Düzenle</button>
        <small class="text-muted">Biçim: root => s1, s2, s3</small>
    </div>
</div>

<script>
    function setModeAndSubmit(mode, defaultMinScore, btn){
        document.getElementById('typeInput').value = mode;
        var ms = document.getElementById('minScoreInput');
        if(ms && (!ms.value || ms.value === '' || ms.value === '0.10' || ms.value === '0')){
            ms.value = defaultMinScore; // semantic: 0.02, others: 0.10
        }
        // submit the parent form of the button
        var form = btn.closest('form');
        if(form) form.submit();
    }
    async function openSynEditor(){
        const resp = await fetch('/api/synonyms');
        const txt = await resp.text();
        const updated = prompt('Synonyms (root => s1, s2, s3)', txt);
        if(updated !== null){
            const save = await fetch('/api/synonyms', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(updated)});
            if(save.ok){ alert('Kaydedildi. Aramalarda anında geçerli.'); }
            else{ alert('Kaydetmede hata: ' + save.statusText); }
        }
    }
</script>

@if (!string.IsNullOrWhiteSpace(Model?.Query))
{
    <p><strong>@Model.Results.Count</strong> sonuç gösteriliyor. Toplam belge: @ViewBag.Total. Eşik: <strong>@Model.MinScore.ToString("0.00")</strong>. Mod: <strong>@(ViewBag.Type ?? "hybrid")</strong>, α: <strong>@(ViewBag.Alpha ?? 0.4)</strong></p>
}
else
{
    <p>Bir sorgu girin. Örnek: spor, ekonomi piyasaları, yapay zeka</p>
}

<div class="row mb-3">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">Gönderen İstatistikleri (Kümülatif)</div>
            <div class="card-body">
                <p>Toplam Doküman: <strong>@Model.Stats.Total</strong></p>
                <p>Ortalama Yaş: <strong>@Model.Stats.AvgAge.ToString("0.0")</strong></p>
                <div class="row">
                    <div class="col-sm-6">
                        <h6>Şehre Göre</h6>
                        <ul class="list-unstyled">
                            @foreach (var kv in Model.Stats.ByCity)
                            {
                                <li>@kv.Key: <strong>@kv.Value</strong></li>
                            }
                        </ul>
                    </div>
                    <div class="col-sm-6">
                        <h6>Cinsiyete Göre</h6>
                        <ul class="list-unstyled">
                            @foreach (var kv in Model.Stats.ByGender)
                            {
                                <li>@kv.Key: <strong>@kv.Value</strong></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">Arama İstatistikleri (Bu Sorgu)</div>
            <div class="card-body">
                @if (Model.SearchStats is null || string.IsNullOrWhiteSpace(Model.Query))
                {
                    <div class="text-muted">İstatistik görmek için bir arama yapın.</div>
                }
                else
                {
                    <p>Arama: <strong>@Model.SearchStats.Query</strong></p>
                    <p>Toplam Değerlendirilen Doküman: <strong>@Model.SearchStats.TotalDocs</strong></p>
                    <p>Eşik Üstü Sayı: <strong>@Model.SearchStats.AboveThresholdCount</strong> — Eşik Altı Sayı: <strong>@Model.SearchStats.BelowThresholdCount</strong></p>
                    <p>Toplama Oranı (Coverage): <strong>@(Model.SearchStats.CoverageRatio.ToString("0.0%"))</strong></p>
                    <p>Ortalama Skor (Tümü): <strong>@Model.SearchStats.AvgScoreAll.ToString("0.000")</strong></p>
                    <p>Ortalama Skor (Eşik Üstü): <strong>@Model.SearchStats.AvgScoreAbove.ToString("0.000")</strong></p>
                    <p>En Yüksek Skor: <strong>@Model.SearchStats.TopScore.ToString("0.000")</strong></p>
                    <p>Ortalama Yaş (Eşik Üstü): <strong>@Model.SearchStats.AvgAge.ToString("0.0")</strong></p>
                    <div>
                        <span>Cinsiyet Oranı (Eşik Üstü):</span>
                        @if (Model.SearchStats.GenderRatio?.Any() == true)
                        {
                            <ul class="list-inline mb-0">
                                @foreach (var kv in Model.SearchStats.GenderRatio)
                                {
                                    <li class="list-inline-item">@kv.Key: <strong>@kv.Value.ToString("0.0%")</strong></li>
                                }
                            </ul>
                        }
                        else
                        {
                            <span class="text-muted">Veri yok</span>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<ul class="list-group">
@foreach (var r in Model?.Results ?? Enumerable.Empty<SemanticSearch.Models.SearchResult>())
{
    <li class="list-group-item">
        <div class="d-flex justify-content-between">
            <strong>@r.Document.Title</strong>
            <span class="badge bg-secondary">@r.Score.ToString("0.000")</span>
        </div>
        <div class="text-muted">Kategori: @r.Document.Category</div>
        <div class="small text-muted">
            Gönderen: @r.Document.SubmitterName (@r.Document.SubmitterAge) - @r.Document.SubmitterGender, @r.Document.SubmitterCity - Tel: @r.Document.SubmitterPhone
        </div>
        <div>@r.Document.Content</div>
    </li>
}
</ul>
